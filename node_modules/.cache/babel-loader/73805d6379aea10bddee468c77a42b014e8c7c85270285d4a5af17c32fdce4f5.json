{"ast":null,"code":"import locationHook from \"./use-location.js\";\nimport matcherWithCache from \"./matcher.js\";\nimport { useContext, createContext, isValidElement, cloneElement, createElement as h, Fragment, useState, forwardRef, useIsomorphicLayoutEffect, useEvent, useInsertionEffect } from \"./react-deps.js\";\n\n/*\n * Router and router context. Router is a lightweight object that represents the current\n * routing options: how location is managed, base path etc.\n *\n * There is a default router present for most of the use cases, however it can be overridden\n * via the <Router /> component.\n */\n\nconst defaultRouter = {\n  hook: locationHook,\n  matcher: matcherWithCache(),\n  base: \"\"\n  // this option is used to override the current location during SSR\n  // ssrPath: undefined,\n};\n\nconst RouterCtx = createContext(defaultRouter);\n\n// gets the closest parent router from the context\nexport const useRouter = () => useContext(RouterCtx);\n\n/*\n * Part 1, Hooks API: useRoute and useLocation\n */\n\n// Internal version of useLocation to avoid redundant useRouter calls\nconst useLocationFromRouter = router => router.hook(router);\nexport const useLocation = () => useLocationFromRouter(useRouter());\nexport const useRoute = pattern => {\n  const router = useRouter();\n  const [path] = useLocationFromRouter(router);\n  return router.matcher(pattern, path);\n};\n\n/*\n * Part 2, Low Carb Router API: Router, Route, Link, Switch\n */\n\nexport const Router = _ref => {\n  let {\n    hook,\n    matcher,\n    ssrPath,\n    base = \"\",\n    parent,\n    children\n  } = _ref;\n  // updates the current router with the props passed down to the component\n  const updateRouter = function (router) {\n    let proto = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : parent || defaultRouter;\n    router.hook = hook || proto.hook;\n    router.matcher = matcher || proto.matcher;\n    router.ssrPath = ssrPath || proto.ssrPath;\n    router.ownBase = base;\n\n    // store reference to parent router\n    router.parent = parent;\n    return router;\n  };\n\n  // we use `useState` here, but it only catches the first render and never changes.\n  // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n  const [value] = useState(() => updateRouter({\n    // We must store base as a property accessor because effects\n    // somewhat counter-intuitively run in child components *first*!\n    // This means that by the time a parent's base is updated in the\n    // parent effect, the child effect has already run, and saw\n    // the parent's *previous* base during its own execution.\n    get base() {\n      return (value.parent || defaultRouter).base + value.ownBase;\n    }\n  })); // create the object once...\n  useInsertionEffect(() => {\n    updateRouter(value);\n  }); // ...then update it on each render\n\n  return h(RouterCtx.Provider, {\n    value,\n    children\n  });\n};\nexport const Route = _ref2 => {\n  let {\n    path,\n    match,\n    component,\n    children\n  } = _ref2;\n  const useRouteMatch = useRoute(path);\n\n  // `props.match` is present - Route is controlled by the Switch\n  const [matches, params] = match || useRouteMatch;\n  if (!matches) return null;\n\n  // React-Router style `component` prop\n  if (component) return h(component, {\n    params\n  });\n\n  // support render prop or plain children\n  return typeof children === \"function\" ? children(params) : children;\n};\nexport const Link = forwardRef((props, ref) => {\n  const router = useRouter();\n  const [, navigate] = useLocationFromRouter(router);\n  const {\n    to,\n    href = to,\n    children,\n    onClick\n  } = props;\n  const handleClick = useEvent(event => {\n    // ignores the navigation when clicked using right mouse button or\n    // by holding a special modifier key: ctrl, command, win, alt, shift\n    if (event.ctrlKey || event.metaKey || event.altKey || event.shiftKey || event.button !== 0) return;\n    onClick && onClick(event);\n    if (!event.defaultPrevented) {\n      event.preventDefault();\n      navigate(to || href, props);\n    }\n  });\n\n  // wraps children in `a` if needed\n  const extraProps = {\n    // handle nested routers and absolute paths\n    href: href[0] === \"~\" ? href.slice(1) : router.base + href,\n    onClick: handleClick,\n    to: null,\n    ref\n  };\n  const jsx = isValidElement(children) ? children : h(\"a\", props);\n  return cloneElement(jsx, extraProps);\n});\nconst flattenChildren = children => {\n  return Array.isArray(children) ? [].concat(...children.map(c => c && c.type === Fragment ? flattenChildren(c.props.children) : flattenChildren(c))) : [children];\n};\nexport const Switch = _ref3 => {\n  let {\n    children,\n    location\n  } = _ref3;\n  const router = useRouter();\n  const matcher = router.matcher;\n  const [originalLocation] = useLocationFromRouter(router);\n  for (const element of flattenChildren(children)) {\n    let match = 0;\n    if (isValidElement(element) &&\n    // we don't require an element to be of type Route,\n    // but we do require it to contain a truthy `path` prop.\n    // this allows to use different components that wrap Route\n    // inside of a switch, for example <AnimatedRoute />.\n    (match = element.props.path ? matcher(element.props.path, location || originalLocation) : [true, {}])[0]) return cloneElement(element, {\n      match\n    });\n  }\n  return null;\n};\nexport const Redirect = props => {\n  const {\n    to,\n    href = to\n  } = props;\n  const [, navigate] = useLocation();\n  const redirect = useEvent(() => navigate(to || href, props));\n\n  // redirect is guaranteed to be stable since it is returned from useEvent\n  useIsomorphicLayoutEffect(() => {\n    redirect();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return null;\n};\nexport default useRoute;","map":{"version":3,"names":["locationHook","matcherWithCache","useContext","createContext","isValidElement","cloneElement","createElement","h","Fragment","useState","forwardRef","useIsomorphicLayoutEffect","useEvent","useInsertionEffect","defaultRouter","hook","matcher","base","RouterCtx","useRouter","useLocationFromRouter","router","useLocation","useRoute","pattern","path","Router","_ref","ssrPath","parent","children","updateRouter","proto","arguments","length","undefined","ownBase","value","Provider","Route","_ref2","match","component","useRouteMatch","matches","params","Link","props","ref","navigate","to","href","onClick","handleClick","event","ctrlKey","metaKey","altKey","shiftKey","button","defaultPrevented","preventDefault","extraProps","slice","jsx","flattenChildren","Array","isArray","concat","map","c","type","Switch","_ref3","location","originalLocation","element","Redirect","redirect"],"sources":["C:/Users/Jorge/Downloads/TFG/algoritmos_v1/web-app/node_modules/wouter/index.js"],"sourcesContent":["import locationHook from \"./use-location.js\";\nimport matcherWithCache from \"./matcher.js\";\n\nimport {\n  useContext,\n  createContext,\n  isValidElement,\n  cloneElement,\n  createElement as h,\n  Fragment,\n  useState,\n  forwardRef,\n  useIsomorphicLayoutEffect,\n  useEvent,\n  useInsertionEffect,\n} from \"./react-deps.js\";\n\n/*\n * Router and router context. Router is a lightweight object that represents the current\n * routing options: how location is managed, base path etc.\n *\n * There is a default router present for most of the use cases, however it can be overridden\n * via the <Router /> component.\n */\n\nconst defaultRouter = {\n  hook: locationHook,\n  matcher: matcherWithCache(),\n  base: \"\",\n  // this option is used to override the current location during SSR\n  // ssrPath: undefined,\n};\n\nconst RouterCtx = createContext(defaultRouter);\n\n// gets the closest parent router from the context\nexport const useRouter = () => useContext(RouterCtx);\n\n/*\n * Part 1, Hooks API: useRoute and useLocation\n */\n\n// Internal version of useLocation to avoid redundant useRouter calls\nconst useLocationFromRouter = (router) => router.hook(router);\n\nexport const useLocation = () => useLocationFromRouter(useRouter());\n\nexport const useRoute = (pattern) => {\n  const router = useRouter();\n  const [path] = useLocationFromRouter(router);\n  return router.matcher(pattern, path);\n};\n\n/*\n * Part 2, Low Carb Router API: Router, Route, Link, Switch\n */\n\nexport const Router = ({\n  hook,\n  matcher,\n  ssrPath,\n  base = \"\",\n  parent,\n  children,\n}) => {\n  // updates the current router with the props passed down to the component\n  const updateRouter = (router, proto = parent || defaultRouter) => {\n    router.hook = hook || proto.hook;\n    router.matcher = matcher || proto.matcher;\n    router.ssrPath = ssrPath || proto.ssrPath;\n    router.ownBase = base;\n\n    // store reference to parent router\n    router.parent = parent;\n\n    return router;\n  };\n\n  // we use `useState` here, but it only catches the first render and never changes.\n  // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n  const [value] = useState(() =>\n    updateRouter({\n      // We must store base as a property accessor because effects\n      // somewhat counter-intuitively run in child components *first*!\n      // This means that by the time a parent's base is updated in the\n      // parent effect, the child effect has already run, and saw\n      // the parent's *previous* base during its own execution.\n      get base() {\n        return (value.parent || defaultRouter).base + value.ownBase;\n      },\n    })\n  ); // create the object once...\n  useInsertionEffect(() => {\n    updateRouter(value);\n  }); // ...then update it on each render\n\n  return h(RouterCtx.Provider, {\n    value,\n    children,\n  });\n};\n\nexport const Route = ({ path, match, component, children }) => {\n  const useRouteMatch = useRoute(path);\n\n  // `props.match` is present - Route is controlled by the Switch\n  const [matches, params] = match || useRouteMatch;\n\n  if (!matches) return null;\n\n  // React-Router style `component` prop\n  if (component) return h(component, { params });\n\n  // support render prop or plain children\n  return typeof children === \"function\" ? children(params) : children;\n};\n\nexport const Link = forwardRef((props, ref) => {\n  const router = useRouter();\n  const [, navigate] = useLocationFromRouter(router);\n\n  const { to, href = to, children, onClick } = props;\n\n  const handleClick = useEvent((event) => {\n    // ignores the navigation when clicked using right mouse button or\n    // by holding a special modifier key: ctrl, command, win, alt, shift\n    if (\n      event.ctrlKey ||\n      event.metaKey ||\n      event.altKey ||\n      event.shiftKey ||\n      event.button !== 0\n    )\n      return;\n\n    onClick && onClick(event);\n    if (!event.defaultPrevented) {\n      event.preventDefault();\n      navigate(to || href, props);\n    }\n  });\n\n  // wraps children in `a` if needed\n  const extraProps = {\n    // handle nested routers and absolute paths\n    href: href[0] === \"~\" ? href.slice(1) : router.base + href,\n    onClick: handleClick,\n    to: null,\n    ref,\n  };\n  const jsx = isValidElement(children) ? children : h(\"a\", props);\n\n  return cloneElement(jsx, extraProps);\n});\n\nconst flattenChildren = (children) => {\n  return Array.isArray(children)\n    ? [].concat(\n        ...children.map((c) =>\n          c && c.type === Fragment\n            ? flattenChildren(c.props.children)\n            : flattenChildren(c)\n        )\n      )\n    : [children];\n};\n\nexport const Switch = ({ children, location }) => {\n  const router = useRouter();\n  const matcher = router.matcher;\n  const [originalLocation] = useLocationFromRouter(router);\n\n  for (const element of flattenChildren(children)) {\n    let match = 0;\n\n    if (\n      isValidElement(element) &&\n      // we don't require an element to be of type Route,\n      // but we do require it to contain a truthy `path` prop.\n      // this allows to use different components that wrap Route\n      // inside of a switch, for example <AnimatedRoute />.\n      (match = element.props.path\n        ? matcher(element.props.path, location || originalLocation)\n        : [true, {}])[0]\n    )\n      return cloneElement(element, { match });\n  }\n\n  return null;\n};\n\nexport const Redirect = (props) => {\n  const { to, href = to } = props;\n  const [, navigate] = useLocation();\n  const redirect = useEvent(() => navigate(to || href, props));\n\n  // redirect is guaranteed to be stable since it is returned from useEvent\n  useIsomorphicLayoutEffect(() => {\n    redirect();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return null;\n};\n\nexport default useRoute;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}